{"version":3,"sources":["index.js"],"names":["Square","props","className","isWinning","onClick","value","Board","i","this","squares","winningSquares","includes","n","push","renderSquare","renderSquares","renderRows","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isDescending","slice","length","calculateWinner","setState","concat","location","step","status","current","winner","moves","map","move","desc","jumpTo","player","line","handleClick","reverse","sortHistory","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3a38929.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n\treturn (\n\t\t<button\n\t\t\tclassName={'square ' + (props.isWinning ? 'square--winning' : null)}\n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\trenderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t\tisWinning={this.props.winningSquares.includes(i)}\n\t\t\t\tkey={'square' + i}\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Render ra các ô\n\trenderSquares(n) {\n\t\tlet squares = [];\n\t\tfor (let i = n; i < n + 3; i++) {\n\t\t\tsquares.push(this.renderSquare(i));\n\t\t}\n\t\treturn squares;\n\t}\n\n\t// Render ra các ô trên 1 hàng\n\trenderRows(i) {\n\t\treturn <div className=\"board-row\">{this.renderSquares(i)}</div>;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderRows(0)}\n\t\t\t\t{this.renderRows(3)}\n\t\t\t\t{this.renderRows(6)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t\t},\n\t\t\t],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true,\n\t\t\tisDescending: true,\n\t\t};\n\t}\n\n\thandleClick(i) {\n\t\tconst locations = [\n\t\t\t[1, 1],\n\t\t\t[2, 1],\n\t\t\t[3, 1],\n\t\t\t[1, 2],\n\t\t\t[2, 2],\n\t\t\t[3, 2],\n\t\t\t[1, 3],\n\t\t\t[2, 3],\n\t\t\t[3, 3],\n\t\t];\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares,\n\t\t\t\t\tlocation: locations[i],\n\t\t\t\t},\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t});\n\t}\n\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0,\n\t\t});\n\t}\n\n\tsortHistory() {\n\t\tthis.setState({\n\t\t\tisDescending: !this.state.isDescending,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move\n\t\t\t\t? 'Go to move #' + move + ' at location (' + history[move].location + ')'\n\t\t\t\t: 'Go to game start';\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>\n\t\t\t\t\t\t{move === this.state.stepNumber ? <b>{desc}</b> : desc}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = 'Winner: ' + winner.player + ' at points ' + winner.line;\n\t\t} else if (!current.squares.includes(null)) {\n\t\t\tstatus = 'Draw';\n\t\t} else {\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={(i) => this.handleClick(i)}\n\t\t\t\t\t\twinningSquares={winner ? winner.line : []}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.sortHistory();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tSort by: {this.state.isDescending ? 'Descending' : 'Asending'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn { player: squares[a], line: [a, b, c] };\n\t\t}\n\t}\n\treturn null;\n}\n"],"sourceRoot":""}